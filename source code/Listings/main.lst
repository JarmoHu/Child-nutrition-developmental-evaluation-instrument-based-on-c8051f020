C51 COMPILER V9.56.0.0   MAIN                                                              11/23/2017 22:06:06 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "keyout.h"
   2          #include "lcdcontrol.h"
   3          #include "who.h"
   4          #include <intrins.h>
   5          #include "c8051f020.h"
   6          #include "funcf020.h"
   7          
   8          #define function1 key_F1
   9          #define function2 key_F2
  10          #define function3 key_F3
  11          #define function4 key_F4
  12          #define maxdata 5
  13          
  14          void Evaluate(void);      //营养发育评价功能
  15          void Forecast(void);      //身高预测功能
  16          void Flo_to_str(float child); //将数浮点数转化为字符串
  17          void New_data(uchar i);
  18          void View_old(uchar i);
  19          void Ch_to_str(uchar i);
  20          void Change_time(void);
  21          void Set_alarm(void);
  22          
  23          uchar heightstr[6] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
  24          uchar xdata tempstr[4] = {0x00, 0x00, 0x00, 0x00};
  25          
  26          bit key_wait; //键盘中断标志位
  27          bit work_status;
  28          bit alarm;
  29          
  30          uchar xdata store_sex[maxdata];
  31          uchar xdata store_month[maxdata];
  32          uchar xdata store_year[maxdata];
  33          uchar xdata store_week[maxdata];
  34          float xdata store_height[maxdata];
  35          float xdata store_weight[maxdata];
  36          
  37          uchar lighting_time = 4;
  38          
  39          uchar xdata month = 0, week = 0, sex = 0, year = 0;
  40          float xdata height = 0, weight = 0;
  41          
  42          uchar xdata hour = 0, minute = 0, second = 0;
  43          uchar xdata hour1 = 0, minute1 = 0, second1 = 0;
  44          
  45          void main()
  46          {
  47   1        uchar key_menu;
  48   1        Init_Device();  //初始化硬件
  49   1        beep = 0;   //关闭蜂鸣器
  50   1        P4 = P4 | 0x30; //关闭LED0和LED1
  51   1        TR2 = 0;
  52   1        TR1 = 0;   //关闭定时器0
  53   1        TR0 = 0;   //关闭定时器1
  54   1        EA = 1;    //打开中断
C51 COMPILER V9.56.0.0   MAIN                                                              11/23/2017 22:06:06 PAGE 2   

  55   1        Lighting(0); //进行一次闪烁,并中断延时关闭
  56   1        Lcd_Delay1ms(1);
  57   1      
  58   1      again_menu:
  59   1        Init_lcd();          //初始化LCD
  60   1        Chrt_disp("F1:Evaluate", 1); //显示功能菜单
  61   1        Chrt_disp("F2:Forecast", 2); //显示功能菜单
  62   1        work_status_change();
  63   1        key_menu = Getkey(); //获取菜单按键
  64   1        TR2 = 0;
  65   1        if (work_status == 1)
  66   1        {
  67   2          work_status = 0;
  68   2          goto again_menu;
  69   2        }
  70   1        switch (key_menu)
  71   1        {
  72   2        case function1:
  73   2          Evaluate();
  74   2          break;
  75   2        case function2:
  76   2          Forecast();
  77   2          break;
  78   2        case function3:
  79   2          Change_time();
  80   2          break;
  81   2        case function4:
  82   2          Set_alarm();
  83   2          break;
  84   2        default:
  85   2          goto again_menu;
  86   2        }
  87   1        goto again_menu; //返回开始界面
  88   1      }
  89          
  90          void timer0() interrupt 1 //中断1(定时器0)为键盘扫描定时子程序
  91          {
  92   1        uchar keyword;
  93   1        static uchar i = 0;
  94   1        i++;
  95   1        if (i >= 3)
  96   1        {
  97   2          i = 0;
  98   2          keyword = P4;
  99   2          keyword = keyword & 0x0f;
 100   2          if (keyword != 0x0f)
 101   2          {
 102   3            Delay10ms();
 103   3            keyword = P4;
 104   3            keyword = keyword & 0x0f;
 105   3            if (keyword != 0x0f)
 106   3            {
 107   4              key_wait = 0; //指令置位有效
 108   4              TR0 = 0;
 109   4            }
 110   3          }
 111   2        }
 112   1        TL0 = 0xb0;
 113   1        TH0 = 0x3C;
 114   1      }
 115          
 116          void timer1() interrupt 3 //中断3(定时器1)为LED1自动关闭程序
C51 COMPILER V9.56.0.0   MAIN                                                              11/23/2017 22:06:06 PAGE 3   

 117          {
 118   1        static uchar i = 0;
 119   1        i++;
 120   1        if (i >= lighting_time)
 121   1        {
 122   2          i = 0;
 123   2          beep = 0;
 124   2          P4 = P4 | 0x20; //关闭LED1
 125   2          TR1 = 0;
 126   2        }
 127   1        TL1 = 0xb0;
 128   1        TH1 = 0x3C;
 129   1      }
 130          
 131          void timer2() interrupt 5
 132          {
 133   1        static uchar xdata i = 0;
 134   1        i++;
 135   1        if (i >= 200)
 136   1        {
 137   2          i = 0;
 138   2          work_status = 1;
 139   2          Wr_lcd(comm, 0x01);
 140   2          Chrt_disp("Welcome to use", 1);
 141   2          TR2 = 0;
 142   2        }
 143   1        T2CON = T2CON & 0x7f;
 144   1      }
 145          
 146          void timer3() interrupt 14
 147          {
 148   1        static uchar xdata i = 0;
 149   1        i++;
 150   1        if (i >= 22)
 151   1        {
 152   2          i = 0;
 153   2          second++;
 154   2          if (second == 60)
 155   2          {
 156   3            second = 0;
 157   3            minute++;
 158   3            if (minute == 60)
 159   3            {
 160   4              minute = 0;
 161   4              hour++;
 162   4              if (hour == 24)
 163   4              {
 164   5                hour = 0;
 165   5              }
 166   4            }
 167   3          }
 168   2          if (work_status)
 169   2          {
 170   3            Wr_lcd(comm, 0xc0);
 171   3            Wr_lcd(dat, (hour / 10) | 0x30);
 172   3            Wr_lcd(dat, (hour % 10) | 0x30);
 173   3            Wr_lcd(dat, ':');
 174   3            Wr_lcd(dat, (minute / 10) | 0x30);
 175   3            Wr_lcd(dat, (minute % 10) | 0x30);
 176   3            Wr_lcd(dat, ':');
 177   3            Wr_lcd(dat, (second / 10) | 0x30);
 178   3            Wr_lcd(dat, (second % 10) | 0x30);
C51 COMPILER V9.56.0.0   MAIN                                                              11/23/2017 22:06:06 PAGE 4   

 179   3          }
 180   2          if (alarm)
 181   2          {
 182   3            if ((hour == hour1) && (minute == minute1) && (second == second1))
 183   3              Lighting(1);
 184   3          }
 185   2        }
 186   1        TMR3CN = TMR3CN & 0x7f;
 187   1      }
 188          
 189          void Forecast(void) //身高预测子程序
 190          {
 191   1        float father, mother, child;
 192   1        uchar sex;
 193   1      
 194   1        /*获取性别*/
 195   1        Wr_lcd(comm, 0x01);
 196   1        Chrt_disp("sex(0:boy 1:girl)", 1);
 197   1        Wr_lcd(comm, 0xc0);
 198   1      
 199   1      again_sex1:
 200   1        sex = Getkey();
 201   1        if (sex != 1 && sex != 0) //性别判断
 202   1          goto again_sex1;
 203   1      
 204   1        /*获取父亲身高*/
 205   1        Wr_lcd(comm, 0x01);
 206   1        Chrt_disp("father's height", 1);
 207   1        Wr_lcd(comm, 0xc0);
 208   1        father = Get_keynumber();
 209   1      
 210   1        /*获取母亲身高*/
 211   1        Wr_lcd(comm, 0x01);
 212   1        Chrt_disp("mother's height", 1);
 213   1        Wr_lcd(comm, 0xc0);
 214   1        mother = Get_keynumber();
 215   1      
 216   1        child = Pre_length(sex, mother, father); //计算孩子身高平均值
 217   1      
 218   1        Wr_lcd(comm, 0x01);
 219   1        Chrt_disp("Max_height ", 1);
 220   1        Flo_to_str(child + 7.5);
 221   1        Chrt_disp_str(heightstr);
 222   1        Chrt_disp("Min_height ", 2);
 223   1        Flo_to_str(child - 7.5);
 224   1        Chrt_disp_str(heightstr);
 225   1      
 226   1        while (Getkey() != keynext) //等待键盘按下
 227   1          ;
 228   1      
 229   1        return;
 230   1      }
 231          
 232          void Evaluate(void)
 233          {
 234   1        uchar xdata data_string = 0, data_menu = 0;
 235   1        float xdata z_score[4] = {0, 0, 0, 0};
 236   1      
 237   1      again_data_menu:
 238   1        Wr_lcd(comm, 0x01);
 239   1        Chrt_disp("F1:new data", 1);
 240   1        Chrt_disp("F2:view old", 2);
C51 COMPILER V9.56.0.0   MAIN                                                              11/23/2017 22:06:06 PAGE 5   

 241   1        data_menu = Getkey();
 242   1        if ((data_menu != key_F1) && (data_menu != key_F2))
 243   1          goto again_data_menu;
 244   1      
 245   1      again_maxdata:
 246   1        Wr_lcd(comm, 0x01);
 247   1        Chrt_disp("child code: 1~", 1);
 248   1        Wr_lcd(dat, maxdata | 0x30);
 249   1        Wr_lcd(comm, 0xc0);
 250   1        data_string = Getkey();
 251   1        if ((data_string > maxdata) || (data_string == 0))
 252   1          goto again_maxdata;
 253   1      
 254   1        data_string--;
 255   1        switch (data_menu)
 256   1        {
 257   2        case key_F1:
 258   2          New_data(data_string);
 259   2          break;
 260   2        case key_F2:
 261   2          View_old(data_string);
 262   2          break;
 263   2        }
 264   1      
 265   1        /*分别计算z分数*/
 266   1        z_score[0] = Length_zcodes(sex, height, month, week);
 267   1        z_score[1] = Weigh_zcodes(sex, weight, month, week);
 268   1        if (((month <= 24) && (height >= 45) && (height <= 110)) || ((month > 24) && (height >= 65) && (height <=
             - 120)))
 269   1          z_score[2] = We_len_zcodes(sex, weight, height, month);
 270   1        z_score[3] = BMI_zcodes(sex, weight, height, month, week);
 271   1      
 272   1        /*身高-年龄判断*/
 273   1        if (z_score[0] > 3)
 274   1        {
 275   2          P4 = P4 && 0xef; //开启LED0
 276   2          Wr_lcd(comm, 0x01);
 277   2          Chrt_disp_str("L-A: excessive tallness");
 278   2        }
 279   1        else if (z_score[0] >= (-1))
 280   1        {
 281   2          Wr_lcd(comm, 0x01);
 282   2          Chrt_disp_str("L-A: median tallness");
 283   2        }
 284   1        else if (z_score[0] >= (-2))
 285   1        {
 286   2          Wr_lcd(comm, 0x01);
 287   2          Chrt_disp_str("L-A: stunted");
 288   2        }
 289   1        else
 290   1        {
 291   2          P4 = P4 && 0xef; //开启LED0
 292   2          Wr_lcd(comm, 0x01);
 293   2          Chrt_disp_str("L-A: severely stunted");
 294   2        }
 295   1      
 296   1        while (Getkey() != keynext)
 297   1          ;
 298   1        P4 = P4 | 0x10; //关闭LED0
 299   1      
 300   1        /*体重-年龄判断*/
 301   1        if (z_score[1] > 1)
C51 COMPILER V9.56.0.0   MAIN                                                              11/23/2017 22:06:06 PAGE 6   

 302   1        {
 303   2          P4 = P4 && 0xef; //开启LED0
 304   2          Wr_lcd(comm, 0x01);
 305   2          Chrt_disp_str("W-A: possible risk of overweight");
 306   2        }
 307   1        else if (z_score[1] >= (-1))
 308   1        {
 309   2          Wr_lcd(comm, 0x01);
 310   2          Chrt_disp_str("W-A: median weight");
 311   2        }
 312   1        else if (z_score[1] >= (-2))
 313   1        {
 314   2          Wr_lcd(comm, 0x01);
 315   2          Chrt_disp_str("W-A: underweight");
 316   2        }
 317   1        else
 318   1        {
 319   2          P4 = P4 && 0xef; //开启LED0
 320   2          Wr_lcd(comm, 0x01);
 321   2          Chrt_disp_str("W-A: severely underweight");
 322   2        }
 323   1      
 324   1        while (Getkey() != keynext)
 325   1          ;
 326   1        P4 = P4 | 0x10; //关闭LED0
 327   1      
 328   1        /*体重-身高判断*/
 329   1        if (((month <= 24) && (height >= 45) && (height <= 110)) || ((month > 24) && (height >= 65) && (height <=
             - 120)))
 330   1        {
 331   2          if (z_score[2] > 3)
 332   2          {
 333   3            P4 = P4 && 0xef; //开启LED0
 334   3            Wr_lcd(comm, 0x01);
 335   3            Chrt_disp_str("W-L: obese");
 336   3          }
 337   2          else if (z_score[2] >= 2)
 338   2          {
 339   3            Wr_lcd(comm, 0x01);
 340   3            Chrt_disp_str("W-L: overweight");
 341   3          }
 342   2          else if (z_score[2] >= 1)
 343   2          {
 344   3            Wr_lcd(comm, 0x01);
 345   3            Chrt_disp_str("W-L: possible risk of overweight");
 346   3          }
 347   2          else if (z_score[2] >= (-2))
 348   2          {
 349   3            Wr_lcd(comm, 0x01);
 350   3            Chrt_disp_str("W-L: median weight");
 351   3          }
 352   2          else if (z_score[2] >= (-3))
 353   2          {
 354   3            Wr_lcd(comm, 0x01);
 355   3            Chrt_disp_str("W-L: wasted");
 356   3          }
 357   2          else
 358   2          {
 359   3            P4 = P4 && 0xef; //开启LED0
 360   3            Wr_lcd(comm, 0x01);
 361   3            Chrt_disp_str("W-L: severely wasted");
 362   3          }
C51 COMPILER V9.56.0.0   MAIN                                                              11/23/2017 22:06:06 PAGE 7   

 363   2        }
 364   1        else
 365   1        {
 366   2          Wr_lcd(comm, 0x01);
 367   2          Chrt_disp_str("W-L: No standard");
 368   2        }
 369   1      
 370   1        while (Getkey() != keynext)
 371   1          ;
 372   1        P4 = P4 | 0x10; //关闭LED0
 373   1      
 374   1        /*BMI判断*/
 375   1        if (month < 60)
 376   1        {
 377   2          if (z_score[3] > 3)
 378   2          {
 379   3            P4 = P4 && 0xef; //开启LED0
 380   3            Wr_lcd(comm, 0x01);
 381   3            Chrt_disp_str("BMI: obese");
 382   3          }
 383   2          else if (z_score[3] >= 2)
 384   2          {
 385   3            Wr_lcd(comm, 0x01);
 386   3            Chrt_disp_str("BMI: overweight");
 387   3          }
 388   2          else if (z_score[3] >= 1)
 389   2          {
 390   3            Wr_lcd(comm, 0x01);
 391   3            Chrt_disp_str("BMI: possible risk of overweight");
 392   3          }
 393   2          else if (z_score[3] >= (-2))
 394   2          {
 395   3            Wr_lcd(comm, 0x01);
 396   3            Chrt_disp_str("BMI: median weight");
 397   3          }
 398   2          else if (z_score[3] >= (-3))
 399   2          {
 400   3            Wr_lcd(comm, 0x01);
 401   3            Chrt_disp_str("BMI: wasted");
 402   3          }
 403   2          else
 404   2          {
 405   3            P4 = P4 && 0xef; //开启LED0
 406   3            Wr_lcd(comm, 0x01);
 407   3            Chrt_disp_str("BMI: severely wasted");
 408   3          }
 409   2        }
 410   1        else
 411   1        {
 412   2          if (z_score[3] > 2)
 413   2          {
 414   3            P4 = P4 && 0xef; //开启LED0
 415   3            Wr_lcd(comm, 0x01);
 416   3            Chrt_disp_str("BMI: obesity");
 417   3          }
 418   2          else if (z_score[3] >= 1)
 419   2          {
 420   3            Wr_lcd(comm, 0x01);
 421   3            Chrt_disp_str("BMI: overweight");
 422   3          }
 423   2          else if (z_score[3] >= (-2))
 424   2          {
C51 COMPILER V9.56.0.0   MAIN                                                              11/23/2017 22:06:06 PAGE 8   

 425   3            Wr_lcd(comm, 0x01);
 426   3            Chrt_disp_str("BMI: median weight");
 427   3          }
 428   2          else if (z_score[3] >= (-3))
 429   2          {
 430   3            Wr_lcd(comm, 0x01);
 431   3            Chrt_disp_str("BMI: thinness");
 432   3          }
 433   2          else
 434   2          {
 435   3            P4 = P4 && 0xef; //开启LED0
 436   3            Wr_lcd(comm, 0x01);
 437   3            Chrt_disp_str("BMI: severe thiness");
 438   3          }
 439   2        }
 440   1      
 441   1        while (Getkey() != keynext)
 442   1          ;
 443   1        P4 = P4 | 0x10; //关闭LED0
 444   1      
 445   1        return;
 446   1      }
 447          
 448          void New_data(uchar i)
 449          {
 450   1      
 451   1        /*获取性别*/
 452   1        Wr_lcd(comm, 0x01);
 453   1        Chrt_disp("sex 0:boy 1:girl", 1);
 454   1        Wr_lcd(comm, 0xc0);
 455   1      again1:
 456   1        store_sex[i] = Getkey();
 457   1        if (store_sex[i] != 1 && store_sex[i] != 0)
 458   1          goto again1;
 459   1      
 460   1      again_month:
 461   1        /*获取岁数*/
 462   1        Wr_lcd(comm, 0x01);
 463   1        Chrt_disp("year   F1:Enter", 1);
 464   1        Wr_lcd(comm, 0xc0);
 465   1        store_year[i] = (uchar)Get_keynumber();
 466   1      
 467   1        /*获取月数*/
 468   1        Wr_lcd(comm, 0x01);
 469   1        Chrt_disp("month", 1);
 470   1        Wr_lcd(comm, 0xc0);
 471   1        store_month[i] = (uchar)Get_keynumber();
 472   1      
 473   1        store_month[i] = store_month[i] + 12 * store_year[i];
 474   1        if (store_month[i] > 84) //判断月数是否超过可计算值
 475   1          goto again_month;
 476   1      
 477   1        if (store_month[i] <= 3)
 478   1        {
 479   2        again_week:
 480   2          /*获取周数*/
 481   2          Wr_lcd(comm, 0x01);
 482   2          Chrt_disp("week", 1);
 483   2          Wr_lcd(comm, 0xc0);
 484   2          store_week[i] = (uchar)Get_keynumber();
 485   2          if (store_week[i] > 13)
 486   2            goto again_week;
C51 COMPILER V9.56.0.0   MAIN                                                              11/23/2017 22:06:06 PAGE 9   

 487   2        }
 488   1      
 489   1        /*获取身高*/
 490   1        Wr_lcd(comm, 0x01);
 491   1        Chrt_disp("height (cm)", 1);
 492   1        Wr_lcd(comm, 0xc0);
 493   1        store_height[i] = Get_keynumber();
 494   1      
 495   1        /*获取体重*/
 496   1        Wr_lcd(comm, 0x01);
 497   1        Chrt_disp("weight (kg)", 1);
 498   1        Wr_lcd(comm, 0xc0);
 499   1        store_weight[i] = Get_keynumber();
 500   1      
 501   1        sex = store_sex[i];
 502   1        month = store_month[i];
 503   1        week = store_week[i];
 504   1        height = store_height[i];
 505   1        weight = store_weight[i];
 506   1      }
 507          
 508          void View_old(uchar i)
 509          {
 510   1        Wr_lcd(comm, 0x01);
 511   1        Chrt_disp("sex: ", 1);
 512   1        Chrt_disp_str(store_sex[i] ? "girl" : "boy");
 513   1      
 514   1        if (store_month[i] > 3)
 515   1        {
 516   2          Chrt_disp("month: ", 2);
 517   2          Ch_to_str(store_month[i]);
 518   2          Chrt_disp_str(tempstr);
 519   2        }
 520   1        else
 521   1        {
 522   2          Chrt_disp("week: ", 2);
 523   2          Ch_to_str(store_week[i]);
 524   2          Chrt_disp_str(tempstr);
 525   2        }
 526   1        while (Getkey() != keynext)
 527   1          ;
 528   1      
 529   1        Wr_lcd(comm, 0x01);
 530   1        Chrt_disp("height: ", 1);
 531   1        Flo_to_str(store_height[i]);
 532   1        Chrt_disp_str(heightstr);
 533   1        Chrt_disp_str("cm");
 534   1      
 535   1        Chrt_disp("weight: ", 2);
 536   1        Flo_to_str(store_weight[i]);
 537   1        Chrt_disp_str(heightstr);
 538   1        Chrt_disp_str("kg");
 539   1      
 540   1        while (Getkey() != keynext)
 541   1          ;
 542   1      
 543   1        sex = store_sex[i];
 544   1        month = store_month[i];
 545   1        week = store_week[i];
 546   1        height = store_height[i];
 547   1        weight = store_weight[i];
 548   1      }
C51 COMPILER V9.56.0.0   MAIN                                                              11/23/2017 22:06:06 PAGE 10  

 549          
 550          void Flo_to_str(float child)
 551          {
 552   1        heightstr[0] = (((uchar)(child / 100)) % 10) | 0x30;
 553   1        heightstr[1] = (((uchar)(child / 10)) % 10) | 0x30;
 554   1        heightstr[2] = (((uchar)child) % 10) | 0x30;
 555   1        heightstr[3] = '.';
 556   1        heightstr[4] = (((uint)(child * 10)) % 10) | 0x30;
 557   1      }
 558          
 559          void Ch_to_str(uchar i)
 560          {
 561   1        tempstr[0] = (((uchar)(i / 100)) % 10) | 0x30;
 562   1        tempstr[1] = (((uchar)(i / 10)) % 10) | 0x30;
 563   1        tempstr[2] = (i % 10) | 0x30;
 564   1      }
 565          
 566          void Change_time(void)
 567          {
 568   1        TMR3CN = TMR3CN & 0xfb;
 569   1      
 570   1      again_hour:
 571   1        Wr_lcd(comm, 0x01);
 572   1        Chrt_disp("hour", 1);
 573   1        Wr_lcd(comm, 0xc0);
 574   1        hour = (uchar)Get_keynumber();
 575   1        if (hour >= 24)
 576   1          goto again_hour;
 577   1      
 578   1      again_minute:
 579   1        Wr_lcd(comm, 0x01);
 580   1        Chrt_disp("minute", 1);
 581   1        Wr_lcd(comm, 0xc0);
 582   1        minute = (uchar)Get_keynumber();
 583   1        if (minute >= 60)
 584   1          goto again_minute;
 585   1      
 586   1      again_second:
 587   1        Wr_lcd(comm, 0x01);
 588   1        Chrt_disp("second", 1);
 589   1        Wr_lcd(comm, 0xc0);
 590   1        second = (uchar)Get_keynumber();
 591   1        if (second >= 60)
 592   1          goto again_second;
 593   1      
 594   1        TMR3CN = TMR3CN | 0x04;
 595   1      }
 596          
 597          void Set_alarm(void)
 598          {
 599   1        Wr_lcd(comm, 0x01);
 600   1        Chrt_disp("0:close 1:open", 1);
 601   1        Wr_lcd(comm, 0xc0);
 602   1      
 603   1      again_alarm:
 604   1        alarm = (bit)Getkey();
 605   1        if (alarm != 1 && alarm != 0) //闹铃判断
 606   1          goto again_alarm;
 607   1        if (alarm)
 608   1        {
 609   2        again_hour1:
 610   2          Wr_lcd(comm, 0x01);
C51 COMPILER V9.56.0.0   MAIN                                                              11/23/2017 22:06:06 PAGE 11  

 611   2          Chrt_disp("hour", 1);
 612   2          Wr_lcd(comm, 0xc0);
 613   2          hour1 = (uchar)Get_keynumber();
 614   2          if (hour1 >= 24)
 615   2            goto again_hour1;
 616   2      
 617   2        again_minute1:
 618   2          Wr_lcd(comm, 0x01);
 619   2          Chrt_disp("minute", 1);
 620   2          Wr_lcd(comm, 0xc0);
 621   2          minute1 = (uchar)Get_keynumber();
 622   2          if (minute1 >= 60)
 623   2            goto again_minute1;
 624   2      
 625   2        again_second1:
 626   2          Wr_lcd(comm, 0x01);
 627   2          Chrt_disp("second", 1);
 628   2          Wr_lcd(comm, 0xc0);
 629   2          second1 = (uchar)Get_keynumber();
 630   2          if (second1 >= 60)
 631   2            goto again_second1;
 632   2        }
 633   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3867    ----
   CONSTANT SIZE    =    787    ----
   XDATA SIZE       =     84      18
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
